#-*-python-*-
# This is an ATS script to coorindate running a series of tests of CRKSPH.
cfl = 0.25
nPerh = 1.51
Cl = 1.0
Cq = 1.0
filter = 0.0
for crk, linearInExpansion, label in ((False, False, "SPH"),
                                      (True, False, "CRK")):
    test(script = "Hydro/Sod/Sod-planar-1d.py",
         clas = "--CRKSPH %s --cfl %g --nPerh %g --Cl %g --Cq %g --linearInExpansion %s --filter %g --graphics True --clearDirectories True --outputFile Sod-planar.ascii" % (crk, cfl, nPerh, Cl, Cq, linearInExpansion, filter), 
         label = "Planar Sod problem -- 1-D (serial %s)" % label)
    test(script = "Hydro/DoubleBlastwave/DoubleBlastwave-1d.py",
         clas = "--CRKSPH %s --cfl %g --nPerh %g --Cl %g --Cq %g --linearInExpansion %s --filter %g --graphics True --clearDirectories True" % (crk, cfl, nPerh, Cl, Cq, linearInExpansion, filter), 
         label = "Planar double blastwave -- 1-D (400 nodes, serial %s)" % label)
    test(script = "Hydro/DoubleBlastwave/DoubleBlastwave-1d.py",
         clas = "--CRKSPH %s --cfl %g --nPerh %g --Cl %g --Cq %g --linearInExpansion %s --filter %g --graphics True --clearDirectories True --nx 1600" % (crk, cfl, nPerh, Cl, Cq, linearInExpansion, filter), 
         label = "Planar double blastwave -- 1-D (1600 nodes, serial %s)" % label)
    test(script = "Hydro/Noh/Noh-planar-1d.py", 
         clas = "--CRKSPH %s --cfl %g --nPerh %g --Cl %g --Cq %g  --linearInExpansion %s --filter %g --graphics True --clearDirectories True --outputFile Noh-planar.ascii" % (crk, cfl, nPerh, Cl, Cq, linearInExpansion, filter), 
         label = "Planar Noh problem -- 1-D (serial %s)" % label)
    test(script = "Hydro/Noh/Noh-cylindrical-2d.py",
         clas = "--CRKSPH %s --cfl %g --nPerh %g --Cl %g --Cq %g  --linearInExpansion %s --filter %g --graphics True --clearDirectories True --outputFile 'Noh-cylindrical.ascii'" % (crk, cfl, nPerh, Cl, Cq, linearInExpansion, filter), 
         label = "Cylindrical Noh problem -- 2-D (serial %s)" % label)
    test(script = "Hydro/Noh/Noh-spherical-3d.py",
         clas = "--CRKSPH %s --cfl %g --nPerh %g --Cl %g --Cq %g  --linearInExpansion %s --filter %g --graphics True --clearDirectories True --outputFile 'Noh-spherical.ascii'" % (crk, cfl, nPerh, Cl, Cq, linearInExpansion, filter), 
         label = "Spherical Noh problem -- 3-D (10 proc %s)" % label,
         np = 10)
    test(script = "Hydro/Sedov/Sedov-planar-1d.py",
         clas = "--CRKSPH %s --cfl %g --nPerh %g --Cl %g --Cq %g  --linearInExpansion %s --filter %g --graphics True --clearDirectories True --smoothSpike True --outputFile Sedov-planar.ascii" % (crk, cfl, nPerh, Cl, Cq, linearInExpansion, filter), 
         label = "Planar Sedov problem -- 1-D (serial %s)" % label)
    test(script = "Hydro/Sedov/Sedov-cylindrical-2d.py",
         clas = "--CRKSPH %s --cfl %g --nPerh %g --Cl %g --Cq %g  --linearInExpansion %s --filter %g --graphics True --clearDirectories True --smoothSpike True --outputFile Sedov-cylindrical.ascii" % (crk, cfl, nPerh, Cl, Cq, linearInExpansion, filter), 
         label = "Cylindrical Sedov problem -- 2-D (serial %s)" % label)
    test(script = "Hydro/Sedov/Sedov-spherical-3d.py",
         clas = "--CRKSPH %s --cfl %g --nPerh %g --Cl %g --Cq %g  --linearInExpansion %s --filter %g --graphics True --clearDirectories True --smoothSpike True --outputFile Sedov-spherical.ascii" % (crk, cfl, nPerh, Cl, Cq, linearInExpansion, filter), 
         label = "Spherical Sedov problem -- 3-D (10 proc %s)" % label,
         np = 10)
    test(script = "Hydro/GreshoVortex/GreshoVortex.py",
         clas = "--CRKSPH %s --cfl %g --nPerh %g --Cl %g --Cq %g  --linearInExpansion %s --filter %g --graphics True --clearDirectories True --goalTime 3.0 --outputFile GreshoVortex.ascii" % (crk, cfl, nPerh, Cl, Cq, linearInExpansion, filter), 
         label = "Gresho vortex problem -- 2-D (64^2, 4 proc, %s)" % label,
         np = 4)
    test(script = "Hydro/KelvinHelmholtz/KelvinHelmholtz-2d_McNally.py",
         clas = "--nx1 256 --nx2 256 --ny1 128 --ny2 128 --CRKSPH %s --cfl %g --nPerh %g --Cl %g --Cq %g  --linearInExpansion %s --filter %g --clearDirectories True" % (crk, cfl, nPerh, Cl, Cq, linearInExpansion, filter), 
         label = "Kelvin-Helmholtz problem -- 2-D (256^2, 10 proc, %s)" % label,
         np = 10)
    #test(script = "Hydro/KelvinHelmholtz/KelvinHelmholtz-2d.py",
    #     clas = "--nx1 256 --nx2 256 --ny1 128 --ny2 128 --CRKSPH %s --cfl %g --nPerh %g --Cl %g --Cq %g  --linearInExpansion %s --filter %g --clearDirectories True" % (crk, cfl, nPerh, Cl, Cq, linearInExpansion, filter), 
    #     label = "Kelvin-Helmholtz problem -- 2-D (256^2, 20 proc, %s)" % label,
    #     np = 20)
    test(script = "Hydro/TriplePoint/TriplePoint-xy.py",
         clas = "--CRKSPH %s --cfl %g --nPerh %g --Cl %g --Cq %g  --linearInExpansion %s --filter %g --clearDirectories True --XSPH False" % (crk, cfl, nPerh, Cl, Cq, linearInExpansion, filter), 
         label = "Triple-point problem -- 2-D (level 1 mesh, 4 proc, %s)" % label,
         np = 4)
    #test(script = "Hydro/TriplePoint/TriplePoint-xy.py",
    #     clas = "--CRKSPH %s --cfl %g --nPerh %g --Cl %g --Cq %g  --linearInExpansion %s --filter %g --clearDirectories True --XSPH False --nx1 40 --nx2 80 --nx3 240 --ny1 120 --ny2 20 --ny3 60" % (crk, cfl, nPerh, Cl, Cq, linearInExpansion, filter), 
    #     label = "Triple-point problem -- 2-D (level 2 mesh, 10 proc, %s)" % label,
    #     np = 10)
    #test(script = "Hydro/TriplePoint/TriplePoint-xy.py",
    #     clas = "--CRKSPH %s --cfl %g --nPerh %g --Cl %g --Cq %g  --linearInExpansion %s --filter %g --clearDirectories True --XSPH False --nx1 80 --nx2 160 --nx3 480 --ny1 240 --ny2 40 --ny3 120" % (crk, cfl, nPerh, Cl, Cq, linearInExpansion, filter), 
    #     label = "Triple-point problem -- 2-D (level 4 mesh, 10 proc, %s)" % label,
    #     np = 40)
