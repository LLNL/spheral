#
#
#ATS:test(SELF, "--caliperFilename 'timer_test_1.cali'", label="Timer test 1", np=8)
#ATS:test(SELF, "--caliperConfig 'None'", label="Timer test 2", np=8)
#ATS:test(SELF, "--caliperFilename 'timer_test_3.cali'", label="Timer test 3", np=1)
#

import Spheral
from SpheralTestUtilities import *
from SpheralOptionParser import *
from SpheralUtilities import TimerMgr
from SpheralUtilities import *
import mpi

import sys, os, time

# Dictionary for testing Adiak inputs
test_dict = {"perf_test": "weak_scaling",
             "rank_count": str(mpi.procs)}
# Note: Caliperreader reads everything as strings for some terrible reason
# The second entry should be
#            "rank_count": mpi.procs}
# but is hacked up for the tests to pass
# Testing commmand line inputs that are automatically passed to adiak
test_int = 4
test_str = "hello"
test_float = 4.224

inp_test_dict = {"test_int": test_int,
                 "test_str": test_str,
                 "test_float": test_float}

commandLine(test_int=test_int,
            test_str=test_str,
            test_float=test_float)

# Remove cali files from previous test runs
caliper_file = TimerMgr.get_filename()
if (os.path.exists(caliper_file)):
    if (mpi.rank == 0):
        os.remove(caliper_file)

do_timers = False
if (TimerMgr.is_started()):
    do_timers = True


for key, val in test_dict.items():
    adiak_value(key, val)

run_count = 8
sleep_time = 1.E-4
fake_timer_name = "test_timer"

for i in range(run_count):
    TimerMgr.timer_start(fake_timer_name)
    time.sleep(sleep_time)
    TimerMgr.timer_end(fake_timer_name)
if (do_timers and TimerMgr.get_filename()):
    adiak_fini()
    TimerMgr.fini()
    mpi.barrier()
    caliper_loc = "@CONFIG_CALIPER_DIR@"
    sys.path.append(os.path.join(caliper_loc, "lib64/caliper"))
    import caliperreader as cr
    if (not os.path.exists(caliper_file)):
        raise ValueError("Caliper file not found")
    r = cr.CaliperReader()
    r.read(caliper_file)
    records = r.records
    found_errors = 0
    # Test for timer name
    if (fake_timer_name in records[1]['region']):
        print(f"Found {fake_timer_name} timer")
    else:
        found_errors += 1
    # Test for function count
    count_val = int(eval(records[1]["avg#sum#rc.count"]))
    if (count_val == run_count):
        print("Run count in Caliper file is correct")
    else:
        found_errors += 1
    glbs = r.globals
    # Test Adiak output for explicitly set values
    for td in test_dict:
        if (td.items() <= glbs.items()):
            print(f"Found {td.items()}")
        else:
            found_errors += 1
    # Test Adiak outputs for commandLine inputs
    for tkey, tval in inp_test_dict.items():
        if (tkey in glbs.items() and str(tval) == glbs[tkey]):
            print(f"Found {tkey}: {tval}")
        else:
            found_errors += 1
    if (found_errors > 0):
        raise ValueError("Caliper file not correct")
    else:
        print("No errors found for TimerMgr")
