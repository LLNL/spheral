#!/user/bin/env python3

# This file runs and compares performance tests through the ats system.
# Run using: ./spheral-lcats tests/performance.py

import sys, os, argparse, time
import numpy as np

caliper_loc = "@CONFIG_CALIPER_DIR@"
sys.path.append(os.path.join(caliper_loc, "lib64/caliper"))
import caliperreader as cr

# Location of benchmark data
benchmark_dir = "/usr/gapps/Spheral/benchmarks"
# Current system architecture from Spack
spheral_sys_arch = "@SPHERAL_SYS_ARCH@"
# Current install configuration from Spack
spheral_install_config = "@SPHERAL_CONFIGURATION@"

# Function called on exit to do timing comparisons
def compare_times(manager):
    for test in manager.testlist:
        run_dir = test.directory
        cfile = os.path.join(run_dir, test.options["caliper_filename"])
        ref_caliper_file = test.options["ref_cali_file"]
        regions = test.options["regions"]
        timers = test.options["timers"]
        r = cr.CaliperReader()
        r.read(cfile)
        records = r.records
        # Extract current times
        times = {}
        for rec in records:
            if ("region" in rec):
                fname = rec["region"]
                if (type(fname) is list):
                    fname = fname[-1]
                if (fname in regions):
                    if (fname in times):
                        for t in timers:
                            times[fname][t] += float(rec[t])
                    else:
                        new_dict = {}
                        for t in timers:
                            new_dict.update({t: float(rec[t])})
                        times.update({fname: new_dict})
        for i, j in times.items():
            print(f"{i}")
            for k, v in j.items():
                print(f"{k}: {v}")

onExit(compare_times)
glue(keep=True)

# NOH tests
group(name="NOH tests")
# General input for all Noh-cylindrical-2d.py tests
test_dir = "@SPHERAL_TEST_INSTALL_PREFIX@/tests/functional/Hydro/Noh"
test_file = "Noh-cylindrical-2d.py"
gen_noh_inp = "--crksph False --cfl 0.25 --Cl 1.0 --Cq 1.0 --filter 0.0 --nPerh 2.01 --graphics False --clearDirectories True --doCompare False"

# Test 1
num_cores = 8
ppc = 100 # Points per core
# If we are on RZGenie/Ruby
if ("broadwell" in spheral_sys_arch):
    num_cores = 72
    ppc = 1000
total_points = num_cores * ppc
nradial = int(np.sqrt(total_points))
ntheta = nradial
test_name = "NC2D_1"
caliper_filename = f"{test_name}_{int(time.time())}.cali"
inps = f"{gen_noh_inp} --nTheta {ntheta} --nRadial {nradial} --steps 10 --caliperFilename {caliper_filename}"
test_path = os.path.join(test_dir, test_file)
# Path to benchmark timing data
ref_cali_file = os.path.join(benchmark_dir, spheral_install_config, caliper_filename)
# Select which timing regions to post-process
regions = ["CheapRK2",
           "CheapRK2PreInit",
           "ConnectivityMap_computeConnectivity",
           "ConnectivityMap_patch",
           "CheapRK2EvalDerivs",
           "CheapRK2EndStep"]
# Select which timers to use to post-process the regions above
timers = ["sum#inclusive#sum#time.duration"] # Means the sum of the time from all ranks
spec_inps = f"{inps} --adiakData 'test_name: {test_name}, total_points:{nradial*ntheta}'"
t = test(script=test_path, clas=spec_inps, label=f"{test_name}", np=num_cores,
         caliper_filename=caliper_filename,
         regions=regions,
         timers=timers,
         ref_cali_file=ref_cali_file)

endgroup()

# Add a wait to ensure all timer files are done
wait()
