#include "libs.hh"
#include "classes.hh"
#include "headers.hh"
//
namespace FractalSpace
{
  void neighbors_nina(Point& point,vector <Point*>& adj)
  {
    adj[0]=point.neighbor_high(0,2,4);
    adj[1]=point.neighbor_high(2,4);
    adj[2]=point.neighbor_high(1,2,4);
    adj[3]=point.neighbor_high(0,4);
    adj[4]=point.neighbor_high(4);
    adj[5]=point.neighbor_high(1,4);
    adj[6]=point.neighbor_high(0,3,4);
    adj[7]=point.neighbor_high(3,4);
    adj[8]=point.neighbor_high(1,3,4);
    adj[9]=point.neighbor_high(0,2);
    adj[10]=point.neighbor_high(2);
    adj[11]=point.neighbor_high(1,2);
    adj[12]=point.neighbor_high(0);
    adj[13]=&point;
    adj[14]=point.neighbor_high(1);
    adj[15]=point.neighbor_high(0,3);
    adj[16]=point.neighbor_high(3);
    adj[17]=point.neighbor_high(1,3);
    adj[18]=point.neighbor_high(0,2,5);
    adj[19]=point.neighbor_high(2,5);
    adj[20]=point.neighbor_high(1,2,5);
    adj[21]=point.neighbor_high(0,5);
    adj[22]=point.neighbor_high(5);
    adj[23]=point.neighbor_high(1,5);
    adj[24]=point.neighbor_high(0,3,5);
    adj[25]=point.neighbor_high(3,5);
    adj[26]=point.neighbor_high(1,3,5);
    /*
    adj[0]=point.neighbor(0,2,4);
    adj[1]=point.neighbor(2,4);
    adj[2]=point.neighbor(1,2,4);
    adj[3]=point.neighbor(0,4);
    adj[4]=point.neighbor(4);
    adj[5]=point.neighbor(1,4);
    adj[6]=point.neighbor(0,3,4);
    adj[7]=point.neighbor(3,4);
    adj[8]=point.neighbor(1,3,4);
    adj[9]=point.neighbor(0,2);
    adj[10]=point.neighbor(2);
    adj[11]=point.neighbor(1,2);
    adj[12]=point.neighbor(0);
    adj[13]=&point;
    adj[14]=point.neighbor(1);
    adj[15]=point.neighbor(0,3);
    adj[16]=point.neighbor(3);
    adj[17]=point.neighbor(1,3);
    adj[18]=point.neighbor(0,2,5);
    adj[19]=point.neighbor(2,5);
    adj[20]=point.neighbor(1,2,5);
    adj[21]=point.neighbor(0,5);
    adj[22]=point.neighbor(5);
    adj[23]=point.neighbor(1,5);
    adj[24]=point.neighbor(0,3,5);
    adj[25]=point.neighbor(3,5);
    adj[26]=point.neighbor(1,3,5);
    //
    for(int i=0;i<27;i++)
      {
	if(!(adj[i]->get_it_is_high()))
	  adj[i]=0;
      }
    */
  }
}
