# -*-makefile-*-
# Spheral++ Distributed package makefile
#-------------------------------------------------------------------------------
srcdir = @abs_srcdir@
VPATH = @abs_srcdir@
SPHERALTOP = @abs_top_srcdir@
BUILDTOP = @abs_top_builddir@

PKGNAME = Distributed
LIBTARGET = libSpheral_$(PKGNAME).$(DYLIBEXT)
INSTSRCTARGETS = \
	DistributedBoundaryInst.cc.py \
	NestedGridDistributedBoundaryInst.cc.py \
	TreeDistributedBoundaryInst.cc.py \
	BoundingVolumeDistributedBoundaryInst.cc.py \
	RedistributeNodesInst.cc.py \
	DistributeByXPositionInst.cc.py \
	SortAndDivideRedistributeNodesInst.cc.py \
	SpaceFillingCurveRedistributeNodesInst.cc.py \
	MortonOrderRedistributeNodesInst.cc.py \
	PeanoHilbertOrderRedistributeNodesInst.cc.py \
	VoronoiRedistributeNodesInst.cc.py
	#NestedGridRedistributeNodesInst.cc.py
SRCTARGETS = \
	Communicator.cc \
	waitAllWithDeadlockDetection.cc

# A few of our target files are only valid for certain dimensions.
ifeq ("yes", "@INST1D@")
SRCTARGETS += \
	SortAndDivideRedistributeNodes1d.cc
endif
ifeq ("yes", "@INST2D@")
SRCTARGETS += \
	SortAndDivideRedistributeNodes2d.cc \
	$(PARMETISTARGET)
endif
ifeq ("yes", "@INST3D@")
SRCTARGETS += \
	SortAndDivideRedistributeNodes3d.cc \
	$(PARMETISTARGET)
endif

#-------------------------------------------------------------------------------
include $(BUILDTOP)/helpers/makefile_master
#EXTRAFLAGS += $(PARMETISINCS) -std=c++0x
LIBS += $(PARMETISLIBS)

#-------------------------------------------------------------------------------
# Override the default PYFFLEOPT flag, because using g++ with -g on the OSF Dec
# machines causes an internal compiler error!
OPTFLAGS = ${DISTRIBUTEDOPT}
PYFFLEOPT = ${DISTRIBUTEDOPT}

