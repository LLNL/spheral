465,471c465,473
<     add_library(osd_gpu_obj
<         OBJECT
<             ${GPU_SOURCE_FILES}
<             ${PRIVATE_HEADER_FILES}
<             ${PUBLIC_HEADER_FILES}
<             ${INC_FILES}
<     )
---
>     if (NOT NO_GPU)
>         add_library(osd_gpu_obj
>             OBJECT
>                 ${GPU_SOURCE_FILES}
>                 ${PRIVATE_HEADER_FILES}
>                 ${PUBLIC_HEADER_FILES}
>                 ${INC_FILES}
>         )
>     endif()
484,496c486,501
<     # this macro uses FindCUDA.cmake to compile .cu kernel files
<     # the target then adds the other obj dependencies and include files
<     _add_possibly_cuda_library(osd_static_gpu
<         STATIC
<             $<TARGET_OBJECTS:osd_gpu_obj>
<             ${KERNEL_FILES}
<     )
<     set_target_properties(osd_static_gpu PROPERTIES OUTPUT_NAME osdGPU CLEAN_DIRECT_OUTPUT 1)
< 
<     target_link_libraries(osd_static_gpu
<         ${PLATFORM_CPU_LIBRARIES} ${PLATFORM_GPU_LIBRARIES}
<     )
< 
---
>     if (NOT NO_GPU)
>         # this macro uses FindCUDA.cmake to compile .cu kernel files
>         # the target then adds the other obj dependencies and include files
>         _add_possibly_cuda_library(osd_static_gpu
>             STATIC
>                 $<TARGET_OBJECTS:osd_gpu_obj>
>                 ${KERNEL_FILES}
>         )
>         set_target_properties(osd_static_gpu PROPERTIES OUTPUT_NAME osdGPU CLEAN_DIRECT_OUTPUT 1)
>         
>         target_link_libraries(osd_static_gpu
>             ${PLATFORM_CPU_LIBRARIES} ${PLATFORM_GPU_LIBRARIES}
>         )
>         
>         install( TARGETS osd_static_gpu DESTINATION ${CMAKE_LIBDIR_BASE} )
>     endif()
498d502
<     install( TARGETS osd_static_gpu DESTINATION ${CMAKE_LIBDIR_BASE} )
527,537c531,535
<         _add_possibly_cuda_library(osd_dynamic_gpu
<             SHARED
<             $<TARGET_OBJECTS:osd_gpu_obj>
<             ${KERNEL_FILES}
<         )
< 
<         set_target_properties(osd_dynamic_gpu
<             PROPERTIES
<                 OUTPUT_NAME osdGPU
<                 CLEAN_DIRECT_OUTPUT 1
<                 SOVERSION ${OSD_SONAME}
---
>         if (NOT NO_GPU)
>             _add_possibly_cuda_library(osd_dynamic_gpu
>                 SHARED
>                 $<TARGET_OBJECTS:osd_gpu_obj>
>                 ${KERNEL_FILES}
539,541c537,546
< 
<         target_link_libraries(osd_dynamic_gpu
<             osd_dynamic_cpu
---
>     
>             set_target_properties(osd_dynamic_gpu
>                 PROPERTIES
>                     OUTPUT_NAME osdGPU
>                     CLEAN_DIRECT_OUTPUT 1
>                     SOVERSION ${OSD_SONAME}
>                 )
>     
>             target_link_libraries(osd_dynamic_gpu
>                 osd_dynamic_cpu
543c548
<         )
---
>             )
545,546c550,552
<         install( TARGETS osd_dynamic_cpu LIBRARY DESTINATION ${CMAKE_LIBDIR_BASE} )
<         install( TARGETS osd_dynamic_gpu LIBRARY DESTINATION ${CMAKE_LIBDIR_BASE} )
---
>             install( TARGETS osd_dynamic_cpu LIBRARY DESTINATION ${CMAKE_LIBDIR_BASE} )
>             install( TARGETS osd_dynamic_gpu LIBRARY DESTINATION ${CMAKE_LIBDIR_BASE} )
>         endif()
